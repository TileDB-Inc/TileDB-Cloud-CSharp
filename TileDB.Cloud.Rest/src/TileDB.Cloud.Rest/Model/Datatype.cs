/*
 * TileDB Storage Platform API
 *
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TileDB.Cloud.Rest.Client.OpenAPIDateConverter;

namespace TileDB.Cloud.Rest.Model
{
    /// <summary>
    /// TileDB data type
    /// </summary>
    /// <value>TileDB data type</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum Datatype
    {
        /// <summary>
        /// Enum INT32 for value: INT32
        /// </summary>
        [EnumMember(Value = "INT32")]
        INT32 = 1,

        /// <summary>
        /// Enum INT64 for value: INT64
        /// </summary>
        [EnumMember(Value = "INT64")]
        INT64 = 2,

        /// <summary>
        /// Enum FLOAT32 for value: FLOAT32
        /// </summary>
        [EnumMember(Value = "FLOAT32")]
        FLOAT32 = 3,

        /// <summary>
        /// Enum FLOAT64 for value: FLOAT64
        /// </summary>
        [EnumMember(Value = "FLOAT64")]
        FLOAT64 = 4,

        /// <summary>
        /// Enum CHAR for value: CHAR
        /// </summary>
        [EnumMember(Value = "CHAR")]
        CHAR = 5,

        /// <summary>
        /// Enum INT8 for value: INT8
        /// </summary>
        [EnumMember(Value = "INT8")]
        INT8 = 6,

        /// <summary>
        /// Enum UINT8 for value: UINT8
        /// </summary>
        [EnumMember(Value = "UINT8")]
        UINT8 = 7,

        /// <summary>
        /// Enum INT16 for value: INT16
        /// </summary>
        [EnumMember(Value = "INT16")]
        INT16 = 8,

        /// <summary>
        /// Enum UINT16 for value: UINT16
        /// </summary>
        [EnumMember(Value = "UINT16")]
        UINT16 = 9,

        /// <summary>
        /// Enum UINT32 for value: UINT32
        /// </summary>
        [EnumMember(Value = "UINT32")]
        UINT32 = 10,

        /// <summary>
        /// Enum UINT64 for value: UINT64
        /// </summary>
        [EnumMember(Value = "UINT64")]
        UINT64 = 11,

        /// <summary>
        /// Enum STRINGASCII for value: STRING_ASCII
        /// </summary>
        [EnumMember(Value = "STRING_ASCII")]
        STRINGASCII = 12,

        /// <summary>
        /// Enum STRINGUTF8 for value: STRING_UTF8
        /// </summary>
        [EnumMember(Value = "STRING_UTF8")]
        STRINGUTF8 = 13,

        /// <summary>
        /// Enum STRINGUTF16 for value: STRING_UTF16
        /// </summary>
        [EnumMember(Value = "STRING_UTF16")]
        STRINGUTF16 = 14,

        /// <summary>
        /// Enum STRINGUTF32 for value: STRING_UTF32
        /// </summary>
        [EnumMember(Value = "STRING_UTF32")]
        STRINGUTF32 = 15,

        /// <summary>
        /// Enum STRINGUCS2 for value: STRING_UCS2
        /// </summary>
        [EnumMember(Value = "STRING_UCS2")]
        STRINGUCS2 = 16,

        /// <summary>
        /// Enum STRINGUCS4 for value: STRING_UCS4
        /// </summary>
        [EnumMember(Value = "STRING_UCS4")]
        STRINGUCS4 = 17,

        /// <summary>
        /// Enum ANY for value: ANY
        /// </summary>
        [EnumMember(Value = "ANY")]
        ANY = 18

    }

}
