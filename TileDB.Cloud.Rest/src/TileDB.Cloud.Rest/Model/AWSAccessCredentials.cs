/*
 * TileDB Storage Platform API
 *
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TileDB.Cloud.Rest.Client.OpenAPIDateConverter;

namespace TileDB.Cloud.Rest.Model
{
    /// <summary>
    /// Model representing aws keys or service role, service roles are currently ignored, but will be preferred option in the future
    /// </summary>
    [DataContract]
    public partial class AWSAccessCredentials :  IEquatable<AWSAccessCredentials>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AWSAccessCredentials" /> class.
        /// </summary>
        /// <param name="secretAccessKey">aws secret access key, never returned in get requests.</param>
        /// <param name="accessKeyId">aws access key.</param>
        /// <param name="serviceRoleArn">aws service role to use for access.</param>
        /// <param name="name">human readable name.</param>
        /// <param name="_default">true if this is the default credential to be used within this namespace.</param>
        /// <param name="buckets">a whitelist of one or more buckets this key should access.</param>
        public AWSAccessCredentials(string secretAccessKey = default(string), string accessKeyId = default(string), string serviceRoleArn = default(string), string name = default(string), bool _default = default(bool), List<string> buckets = default(List<string>))
        {
            this.SecretAccessKey = secretAccessKey;
            this.AccessKeyId = accessKeyId;
            this.ServiceRoleArn = serviceRoleArn;
            this.Name = name;
            this.Default = _default;
            this.Buckets = buckets;
        }

        /// <summary>
        /// aws secret access key, never returned in get requests
        /// </summary>
        /// <value>aws secret access key, never returned in get requests</value>
        [DataMember(Name="secret_access_key", EmitDefaultValue=false)]
        public string SecretAccessKey { get; set; }

        /// <summary>
        /// aws access key
        /// </summary>
        /// <value>aws access key</value>
        [DataMember(Name="access_key_id", EmitDefaultValue=false)]
        public string AccessKeyId { get; set; }

        /// <summary>
        /// aws service role to use for access
        /// </summary>
        /// <value>aws service role to use for access</value>
        [DataMember(Name="service_role_arn", EmitDefaultValue=false)]
        public string ServiceRoleArn { get; set; }

        /// <summary>
        /// human readable name
        /// </summary>
        /// <value>human readable name</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// true if this is the default credential to be used within this namespace
        /// </summary>
        /// <value>true if this is the default credential to be used within this namespace</value>
        [DataMember(Name="default", EmitDefaultValue=false)]
        public bool Default { get; set; }

        /// <summary>
        /// a whitelist of one or more buckets this key should access
        /// </summary>
        /// <value>a whitelist of one or more buckets this key should access</value>
        [DataMember(Name="buckets", EmitDefaultValue=false)]
        public List<string> Buckets { get; set; }

        /// <summary>
        /// Time when udf dependencies was created (rfc3339)
        /// </summary>
        /// <value>Time when udf dependencies was created (rfc3339)</value>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime CreatedAt { get; private set; }

        /// <summary>
        /// Time when udf dependencies was last updated (rfc3339)
        /// </summary>
        /// <value>Time when udf dependencies was last updated (rfc3339)</value>
        [DataMember(Name="updated_at", EmitDefaultValue=false)]
        public DateTime UpdatedAt { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AWSAccessCredentials {\n");
            sb.Append("  SecretAccessKey: ").Append(SecretAccessKey).Append("\n");
            sb.Append("  AccessKeyId: ").Append(AccessKeyId).Append("\n");
            sb.Append("  ServiceRoleArn: ").Append(ServiceRoleArn).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Default: ").Append(Default).Append("\n");
            sb.Append("  Buckets: ").Append(Buckets).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AWSAccessCredentials);
        }

        /// <summary>
        /// Returns true if AWSAccessCredentials instances are equal
        /// </summary>
        /// <param name="input">Instance of AWSAccessCredentials to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AWSAccessCredentials input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SecretAccessKey == input.SecretAccessKey ||
                    (this.SecretAccessKey != null &&
                    this.SecretAccessKey.Equals(input.SecretAccessKey))
                ) && 
                (
                    this.AccessKeyId == input.AccessKeyId ||
                    (this.AccessKeyId != null &&
                    this.AccessKeyId.Equals(input.AccessKeyId))
                ) && 
                (
                    this.ServiceRoleArn == input.ServiceRoleArn ||
                    (this.ServiceRoleArn != null &&
                    this.ServiceRoleArn.Equals(input.ServiceRoleArn))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Default == input.Default ||
                    (this.Default != null &&
                    this.Default.Equals(input.Default))
                ) && 
                (
                    this.Buckets == input.Buckets ||
                    this.Buckets != null &&
                    input.Buckets != null &&
                    this.Buckets.SequenceEqual(input.Buckets)
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SecretAccessKey != null)
                    hashCode = hashCode * 59 + this.SecretAccessKey.GetHashCode();
                if (this.AccessKeyId != null)
                    hashCode = hashCode * 59 + this.AccessKeyId.GetHashCode();
                if (this.ServiceRoleArn != null)
                    hashCode = hashCode * 59 + this.ServiceRoleArn.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Default != null)
                    hashCode = hashCode * 59 + this.Default.GetHashCode();
                if (this.Buckets != null)
                    hashCode = hashCode * 59 + this.Buckets.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
