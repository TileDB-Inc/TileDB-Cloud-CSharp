/*
 * TileDB Storage Platform API
 *
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TileDB.Cloud.Rest.Client;
using TileDB.Cloud.Rest.Api;
using TileDB.Cloud.Rest.Model;

namespace TileDB.Cloud.Rest.Test
{
    /// <summary>
    ///  Class for testing OrganizationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OrganizationApiTests
    {
        private OrganizationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrganizationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrganizationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' OrganizationApi
            //Assert.IsInstanceOf(typeof(OrganizationApi), instance);
        }

        
        /// <summary>
        /// Test AddAWSAccessCredentials
        /// </summary>
        [Test]
        public void AddAWSAccessCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //AWSAccessCredentials awsAccessCredentials = null;
            //instance.AddAWSAccessCredentials(_namespace, awsAccessCredentials);
            
        }
        
        /// <summary>
        /// Test AddUserToOrganization
        /// </summary>
        [Test]
        public void AddUserToOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //OrganizationUser user = null;
            //instance.AddUserToOrganization(organization, user);
            
        }
        
        /// <summary>
        /// Test CheckAWSAccessCredentials
        /// </summary>
        [Test]
        public void CheckAWSAccessCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //var response = instance.CheckAWSAccessCredentials(_namespace);
            //Assert.IsInstanceOf(typeof(List<AWSAccessCredentials>), response, "response is List<AWSAccessCredentials>");
        }
        
        /// <summary>
        /// Test CheckAWSAccessCredentialsByName
        /// </summary>
        [Test]
        public void CheckAWSAccessCredentialsByNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string name = null;
            //var response = instance.CheckAWSAccessCredentialsByName(_namespace, name);
            //Assert.IsInstanceOf(typeof(AWSAccessCredentials), response, "response is AWSAccessCredentials");
        }
        
        /// <summary>
        /// Test CreateOrganization
        /// </summary>
        [Test]
        public void CreateOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Organization organization = null;
            //instance.CreateOrganization(organization);
            
        }
        
        /// <summary>
        /// Test DeleteAWSAccessCredentials
        /// </summary>
        [Test]
        public void DeleteAWSAccessCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string name = null;
            //instance.DeleteAWSAccessCredentials(_namespace, name);
            
        }
        
        /// <summary>
        /// Test DeleteOrganization
        /// </summary>
        [Test]
        public void DeleteOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //instance.DeleteOrganization(organization);
            
        }
        
        /// <summary>
        /// Test DeleteUserFromOrganization
        /// </summary>
        [Test]
        public void DeleteUserFromOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string username = null;
            //instance.DeleteUserFromOrganization(organization, username);
            
        }
        
        /// <summary>
        /// Test GetAllOrganizations
        /// </summary>
        [Test]
        public void GetAllOrganizationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllOrganizations();
            //Assert.IsInstanceOf(typeof(List<Organization>), response, "response is List<Organization>");
        }
        
        /// <summary>
        /// Test GetOrganization
        /// </summary>
        [Test]
        public void GetOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //var response = instance.GetOrganization(organization);
            //Assert.IsInstanceOf(typeof(Organization), response, "response is Organization");
        }
        
        /// <summary>
        /// Test GetOrganizationUser
        /// </summary>
        [Test]
        public void GetOrganizationUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string username = null;
            //var response = instance.GetOrganizationUser(organization, username);
            //Assert.IsInstanceOf(typeof(OrganizationUser), response, "response is OrganizationUser");
        }
        
        /// <summary>
        /// Test UpdateAWSAccessCredentials
        /// </summary>
        [Test]
        public void UpdateAWSAccessCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string name = null;
            //AWSAccessCredentials awsAccessCredentials = null;
            //instance.UpdateAWSAccessCredentials(_namespace, name, awsAccessCredentials);
            
        }
        
        /// <summary>
        /// Test UpdateOrganization
        /// </summary>
        [Test]
        public void UpdateOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //Organization organizationDetails = null;
            //instance.UpdateOrganization(organization, organizationDetails);
            
        }
        
        /// <summary>
        /// Test UpdateUserInOrganization
        /// </summary>
        [Test]
        public void UpdateUserInOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string username = null;
            //OrganizationUser user = null;
            //instance.UpdateUserInOrganization(organization, username, user);
            
        }
        
    }

}
