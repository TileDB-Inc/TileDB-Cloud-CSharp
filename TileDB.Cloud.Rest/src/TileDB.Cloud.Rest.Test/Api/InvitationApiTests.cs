/*
 * TileDB Storage Platform API
 *
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TileDB.Cloud.Rest.Client;
using TileDB.Cloud.Rest.Api;
using TileDB.Cloud.Rest.Model;

namespace TileDB.Cloud.Rest.Test
{
    /// <summary>
    ///  Class for testing InvitationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InvitationApiTests
    {
        private InvitationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new InvitationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InvitationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' InvitationApi
            //Assert.IsInstanceOf(typeof(InvitationApi), instance);
        }

        
        /// <summary>
        /// Test AcceptInvitation
        /// </summary>
        [Test]
        public void AcceptInvitationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string invitation = null;
            //instance.AcceptInvitation(invitation);
            
        }
        
        /// <summary>
        /// Test CancelJoinOrganization
        /// </summary>
        [Test]
        public void CancelJoinOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string invitation = null;
            //string organization = null;
            //instance.CancelJoinOrganization(invitation, organization);
            
        }
        
        /// <summary>
        /// Test CancelShareArrayByInvite
        /// </summary>
        [Test]
        public void CancelShareArrayByInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string invitation = null;
            //string array = null;
            //instance.CancelShareArrayByInvite(_namespace, invitation, array);
            
        }
        
        /// <summary>
        /// Test FetchInvitations
        /// </summary>
        [Test]
        public void FetchInvitationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string array = null;
            //int? start = null;
            //int? end = null;
            //int? page = null;
            //int? perPage = null;
            //string type = null;
            //string status = null;
            //string orderby = null;
            //var response = instance.FetchInvitations(organization, array, start, end, page, perPage, type, status, orderby);
            //Assert.IsInstanceOf(typeof(InvitationData), response, "response is InvitationData");
        }
        
        /// <summary>
        /// Test JoinOrganization
        /// </summary>
        [Test]
        public void JoinOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //InvitationOrganizationJoinEmail emailInvite = null;
            //instance.JoinOrganization(organization, emailInvite);
            
        }
        
        /// <summary>
        /// Test ShareArrayByInvite
        /// </summary>
        [Test]
        public void ShareArrayByInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string array = null;
            //InvitationArrayShareEmail emailInvite = null;
            //instance.ShareArrayByInvite(_namespace, array, emailInvite);
            
        }
        
    }

}
