/*
 * TileDB Storage Platform API
 *
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TileDB.Cloud.Rest.Client;
using TileDB.Cloud.Rest.Api;
using TileDB.Cloud.Rest.Model;

namespace TileDB.Cloud.Rest.Test
{
    /// <summary>
    ///  Class for testing TaskGraphLogsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TaskGraphLogsApiTests
    {
        private TaskGraphLogsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaskGraphLogsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaskGraphLogsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TaskGraphLogsApi
            //Assert.IsInstanceOf(typeof(TaskGraphLogsApi), instance);
        }

        
        /// <summary>
        /// Test CreateTaskGraphLog
        /// </summary>
        [Test]
        public void CreateTaskGraphLogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //TaskGraphLog log = null;
            //var response = instance.CreateTaskGraphLog(_namespace, log);
            //Assert.IsInstanceOf(typeof(TaskGraphLog), response, "response is TaskGraphLog");
        }
        
        /// <summary>
        /// Test GetTaskGraphLog
        /// </summary>
        [Test]
        public void GetTaskGraphLogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string id = null;
            //var response = instance.GetTaskGraphLog(_namespace, id);
            //Assert.IsInstanceOf(typeof(TaskGraphLog), response, "response is TaskGraphLog");
        }
        
        /// <summary>
        /// Test ListTaskGraphLogs
        /// </summary>
        [Test]
        public void ListTaskGraphLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string createdBy = null;
            //string search = null;
            //DateTime? startTime = null;
            //DateTime? endTime = null;
            //int? page = null;
            //int? perPage = null;
            //var response = instance.ListTaskGraphLogs(_namespace, createdBy, search, startTime, endTime, page, perPage);
            //Assert.IsInstanceOf(typeof(TaskGraphLogsData), response, "response is TaskGraphLogsData");
        }
        
        /// <summary>
        /// Test ReportClientNode
        /// </summary>
        [Test]
        public void ReportClientNodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string id = null;
            //TaskGraphClientNodeStatus report = null;
            //instance.ReportClientNode(_namespace, id, report);
            
        }
        
        /// <summary>
        /// Test UpdateTaskGraphLog
        /// </summary>
        [Test]
        public void UpdateTaskGraphLogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _namespace = null;
            //string id = null;
            //TaskGraphLog log = null;
            //instance.UpdateTaskGraphLog(_namespace, id, log);
            
        }
        
    }

}
