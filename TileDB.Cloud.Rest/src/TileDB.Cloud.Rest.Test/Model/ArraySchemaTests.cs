/*
 * TileDB Storage Platform API
 *
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TileDB.Cloud.Rest.Api;
using TileDB.Cloud.Rest.Model;
using TileDB.Cloud.Rest.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TileDB.Cloud.Rest.Test
{
    /// <summary>
    ///  Class for testing ArraySchema
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ArraySchemaTests
    {
        // TODO uncomment below to declare an instance variable for ArraySchema
        //private ArraySchema instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ArraySchema
            //instance = new ArraySchema();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ArraySchema
        /// </summary>
        [Test]
        public void ArraySchemaInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ArraySchema
            //Assert.IsInstanceOf(typeof(ArraySchema), instance);
        }


        /// <summary>
        /// Test the property 'Uri'
        /// </summary>
        [Test]
        public void UriTest()
        {
            // TODO unit test for the property 'Uri'
        }
        /// <summary>
        /// Test the property '_Version'
        /// </summary>
        [Test]
        public void _VersionTest()
        {
            // TODO unit test for the property '_Version'
        }
        /// <summary>
        /// Test the property 'ArrayType'
        /// </summary>
        [Test]
        public void ArrayTypeTest()
        {
            // TODO unit test for the property 'ArrayType'
        }
        /// <summary>
        /// Test the property 'TileOrder'
        /// </summary>
        [Test]
        public void TileOrderTest()
        {
            // TODO unit test for the property 'TileOrder'
        }
        /// <summary>
        /// Test the property 'CellOrder'
        /// </summary>
        [Test]
        public void CellOrderTest()
        {
            // TODO unit test for the property 'CellOrder'
        }
        /// <summary>
        /// Test the property 'Capacity'
        /// </summary>
        [Test]
        public void CapacityTest()
        {
            // TODO unit test for the property 'Capacity'
        }
        /// <summary>
        /// Test the property 'CoordsFilterPipeline'
        /// </summary>
        [Test]
        public void CoordsFilterPipelineTest()
        {
            // TODO unit test for the property 'CoordsFilterPipeline'
        }
        /// <summary>
        /// Test the property 'OffsetFilterPipeline'
        /// </summary>
        [Test]
        public void OffsetFilterPipelineTest()
        {
            // TODO unit test for the property 'OffsetFilterPipeline'
        }
        /// <summary>
        /// Test the property 'Domain'
        /// </summary>
        [Test]
        public void DomainTest()
        {
            // TODO unit test for the property 'Domain'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Test]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'AllowsDuplicates'
        /// </summary>
        [Test]
        public void AllowsDuplicatesTest()
        {
            // TODO unit test for the property 'AllowsDuplicates'
        }

    }

}
